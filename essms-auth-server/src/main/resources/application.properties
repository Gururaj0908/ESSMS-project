management.endpoints.web.exposure.include=*
#------------------------------------------------------------------------------
# Spring cloud Configuration
#------------------------------------------------------------------------------
spring.cloud.config.allowOverride=true
spring.cloud.config.overrideNone=true
spring.cloud.config.overrideSystemProperties=false
#------------------------------------------------------------------------------
# Application configuration
#------------------------------------------------------------------------------
bms.tenant.id=bms
notification.event.forgot.password=FORGOT_PASSWORD
#Expiry time in hour
reset.password.expiry.time=24
reset.password.ui.url=http://
#------------------------------------------------------------------------------
# Logging levels
#------------------------------------------------------------------------------
#logging.level.org.springframework = DEBUG
logging.level.com.netflix.eureka=OFF
logging.level.com.netflix.discovery=OFF
#----------------------------------------------------------------------
#Liquibase configuration
#----------------------------------------------------------------------
liquibase.enabled=true
#------------------------------------------------------------------------------
# Spring boot Configuration
#------------------------------------------------------------------------------
spring.thymeleaf.cache = false
#server.contextPath = /essms-auth
server.port = 9100
#server.address = localhost
server.ssl.enabled = false
spring.application.name=essms-auth
spring.jackson.default-property-inclusion=NON_NULL
spring.jackson.serialization.fail-on-empty-beans=false
management.security.enabled=false
spring.http.multipart.max-file-size=25MB
spring.http.multipart.max-request-size=25MB
#------------------------------------------------------------------------------
# = Security Configurations
#------------------------------------------------------------------------------
security.basic.enabled=false
security.jwt.client-id=web_app
security.jwt.client-secret=secret
security.jwt.grant-type.password=password
security.jwt.grant-type.implicit=implicit
security.jwt.grant-type.refresh_token=refresh_token
security.jwt.grant-type.authorization_code=authorization_code
security.jwt.scope-read=read
security.jwt.scope-write=write
# In seconds
security.jwt.access.token.validity=1800
security.jwt.refresh.token.validity=2592000
security.jwt.signing-key=123
#security.jwt.resource-ids=testjwtresourceid
#------------------------------------------------------------------------------
# = DataSource Configurations
#------------------------------------------------------------------------------
default.tenant.id=default
spring.datasource.url=jdbc:postgresql://10.140.0.2/essms_auth?currentSchema=${default.tenant.id}
spring.datasource.username=postgres
spring.datasource.password=Administrator@2023
spring.datasource.driver-class-name=org.postgresql.Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.datasource.test-while-idle=true
spring.datasource.time-between-eviction-runs-millis=60000
spring.datasource.test-on-borrow=true
spring.datasource.validation-query=SELECT 1;
spring.datasource.validation-interval=30000
spring.datasource.remove-abandoned=true
spring.datasource.remove-abandoned-timeout=60
# max 5
spring.datasource.tomcat.initial-size=5
spring.datasource.tomcat.max-idle=2
spring.datasource.tomcat.min-idle=1
spring.datasource.tomcat.default-auto-commit=false
#------------------------------------------------------------------------------
# = JPA / HIBERNATE
#------------------------------------------------------------------------------
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto=none
spring.jpa.open-in-view=false
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy = org.hibernate.boot.model.naming.ImplicitNamingStrategyJpaCompliantImpl
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.show_sql = false
spring.jpa.properties.hibernate.format_sql = false
spring.jpa.properties.hibernate.id.new_generator_mappings = true
spring.jpa.properties.hibernate.jdbc.time_zone = UTC
spring.jpa.properties.hibernate.enable_lazy_load_no_trans=true
#------------------------------------------------------------------------------
# = Eureka Client Configurations
#------------------------------------------------------------------------------
#eureka.client.enabled = false
# Change this if you want to use a DNS based lookup for determining other eureka servers (see example below)
eureka.shouldUseDns=false
eureka.instance.leaseRenewalIntervalInSeconds: 1
eureka.instance.leaseExpirationDurationInSeconds: 2

eureka.client.serviceUrl.defaultZone=http://localhost:9101/eureka
eureka.client.region=default
eureka.client.healthcheck.enabled=true
eureak.client.lease.duration=5
eureka.client.registerWithEureka=true
ribbon.eureka.enabled = true
#------------------------------------------------------------------------------
# = Rabbit MQ configuration
#------------------------------------------------------------------------------
#spring.rabbitmq.listener.default-requeue-rejected=false
spring.rabbitmq.listener.retry.enabled=true
spring.rabbitmq.listener.retry.initial-interval=2000
spring.rabbitmq.listener.retry.max-attempts=3
spring.rabbitmq.listener.retry.multiplier=1.5
spring.rabbitmq.listener.retry.max-interval=2000
spring.rabbitmq.host = localhost
spring.rabbitmq.port = 5672
spring.rabbitmq.username = guest
spring.rabbitmq.password = guest
spring.redis.host = localhost
spring.redis.port = 6379
auth.rabbitmq.exchange.user=userExchange
auth.rabbitmq.queue.user=authUser
auth.rabbitmq.dlx.queue.user=authDLXUser
operation.rabbitmq.exchange.entity=entityOperationExchange
operation.rabbitmq.queue.entity=authEntityOperation
operation.rabbitmq.dlx.queue.entity=authDLXEntityOperation
location.rabbitmq.exchange.branch=branchExchange
location.rabbitmq.queue.branch=authBranch
location.rabbitmq.dlx.queue.branch=authDLXBranch
#------------------------------------------------------------------------------
# = Distributed logging Configurations
#------------------------------------------------------------------------------
spring.sleuth.sampler.percentage=1.0
spring.sleuth.web.skipPattern=(^cleanup.*)
#spring.zipkin.locator.discovery.enabled=true
#spring.zipkin.baseUrl=http://localhost:9411/